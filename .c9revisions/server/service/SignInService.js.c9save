{"ts":1377725698514,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var env = require('rekuire')(\"env\");\nvar logger = require('winston');\nvar when = require(\"when\");\nvar UserRepository = env.require(\"/server/service/repository/UserRepository\");\nvar CalendarService = env.require(\"/server/service/GoogleCalendarService\");\n\nvar SignInService = function(){\n\n    this.signIn = function(accessToken, refreshToken, profile, done) {\n      \n        UserRepository.findOneAndUpdate(profile.id, profile.name.givenName, accessToken)\n            .then(function(user) {              \n                return user.calendarId ? user : createNewCalendar(user);  \n            }).then(function(user) {\n                logger.info(\"User(%s-%s) signed in.\", user.name, user.id);\n                done(undefined, user);\n            }, function(err) {\n                done(err);\n            });\n            \n   };\n  \n    function createNewCalendar(user) {\n        var deferred = when.defer();\n                \n        CalendarService.createNewCalendar(user.accessToken, \"Movie Reminder\")\n            .then(function(calendar) {\n                \n                logger.info(\"Create new calendar(%s) for user(%s).\", calendar.id, user.id);\n                UserRepository.setCalendarId(user.id, calendar.id).then(function() {\n                    user.calendarId = calendar.id;\n                    deferred.resolve(user);       \n                });\n                \n            });\n        \n        return deferred.promise;\n   }\n   \n};\n\nmodule.exports = new SignInService();"]],"start1":0,"start2":0,"length1":0,"length2":1476}]],"length":1476}
{"contributors":[],"silentsave":false,"ts":1377725577704,"patch":[[{"diffs":[[0,"y\");"],[-1,"\nvar CalendarService = env.require(\"/server/service/GoogleCalendarService\");"],[0,"\n\nva"]],"start1":172,"start2":172,"length1":84,"length2":8},{"diffs":[[0,"\n   "],[-1,"     UserRepository.findOneAndUpdate(profile.id, profile.name.givenName, accessToken)\n            .then(function(user) {              \n                return user.calendarId ? user : createNewCalendar(user);  \n            }).then(function(user) {\n                logger.info(\"User(%s-%s) signed in.\", user.name, user.id);\n                done(undefined, user);\n            }, function(err) {\n                done(err);\n            });\n            \n   };\n  \n    function createNewCalendar(user) {\n        var deferred = when.defer();\n                \n        CalendarService.createNewCalendar(user.accessToken, \"Movie Reminder\")\n            .then(function(calendar) {\n                \n                logger.info(\"Create new calendar(%s) for user(%s).\", calendar.id, user.id);\n                UserRepository.setCalendarId(user.id, calendar.id).then(function() {\n                    user.calendarId = calendar.id;\n                    deferred.resolve(user);       \n                });\n                \n            });\n        \n        return deferred.promise;\n   }\n   "],[1,"};\n  \n"],[0,"\n};\n"]],"start1":288,"start2":288,"length1":1074,"length2":14}]],"length":340,"saved":false}
